#Использовать logos

Перем _Лог;
Перем _файлыОшибок;
Перем _ФайлНастроек;
Перем _ФорматОтчета; // Используемый формат отчета

Процедура ОписаниеКоманды(Команда) Экспорт
	
	Команда.Аргумент("GENERIC_ISSUE_SETTINGS_JSON", "", "Путь к файлу настроек. Например ./generic-issue-settings.json")
		.ТСтрока()
		.ВОкружении("GENERIC_ISSUE_SETTINGS_JSON");
	
	Команда.Аргумент("GENERIC_ISSUE_JSON", "", "Путь к файлам generic-issue.json, на основе которых будет создан файл настроек. Например ./edt-json.json,./acc-generic-issue.json")
		.ТСтрока()
		.ВОкружении("GENERIC_ISSUE_JSON");
	
	Команда.Опция("f Format", ТипыФорматаОтчетаСонар.Generic_Issue, "Формат отчета")
		.ТПеречисление()
		.Перечисление(
			ТипыФорматаОтчетаСонар.Generic_Issue,
			ТипыФорматаОтчетаСонар.Generic_Issue,
			ТипыФорматаОтчетаСонар.Описание(ТипыФорматаОтчетаСонар.Generic_Issue))
		.Перечисление(
			ТипыФорматаОтчетаСонар.Generic_Issue_10_3,
			ТипыФорматаОтчетаСонар.Generic_Issue_10_3,
			ТипыФорматаОтчетаСонар.Описание(ТипыФорматаОтчетаСонар.Generic_Issue_10_3));
	
КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	ИнициализацияПараметров(Команда);
	
	таблицаНастроек = ОбщегоНазначения.ПолучитьТаблицуНастроек(_ФайлНастроек, _Лог);
	_лог.Отладка("Из файла настроек прочитано: " + таблицаНастроек.Количество());
	
	Настройки = ПрочитатьЗначенияИзФайлов();
	
	структПоиска = Новый Структура("ruleId,message,filePath", "", "", "");
	
	Для Каждого цЭлемент Из Настройки.Ишузы Цикл
		
		структПоиска.ruleId = цЭлемент.Ключ;
		
		Если таблицаНастроек.НайтиСтроки(структПоиска).Количество() = 0 Тогда
			
			новСтрока = таблицаНастроек.Добавить();
			
			ЗаполнитьЗначенияСвойств(новСтрока, цЭлемент.Значение);
			новСтрока.ruleId = цЭлемент.Ключ;
			новСтрока.message = "";
			новСтрока.filePath = "";
			
			данныеПравила = Настройки.Правила.Получить(цЭлемент.Ключ);
			
			Если НЕ данныеПравила = Неопределено Тогда
				ЗаполнитьЗначенияСвойств(новСтрока, данныеПравила);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	структПоиска.ruleId = "";
	
	Если таблицаНастроек.НайтиСтроки(структПоиска).Количество() = 0 Тогда
		
		новСтрока = таблицаНастроек.Добавить();
		
		новСтрока.ruleId = "";
		новСтрока.message = "";
		новСтрока.filePath = "";
		
	КонецЕсли;
	
	таблицаНастроек.Сортировать("ruleId,message,filePath");
	
	_лог.Отладка("Различных настроек: " + таблицаНастроек.Количество());
	
	настройкиКЗаписи = Новый Массив;
	
	Для Каждого цСтрокаНастройки Из таблицаНастроек Цикл
		
		Если Настройки.ТипФорматаОтчета = ТипыФорматаОтчетаСонар.Generic_Issue_10_3 Тогда
			структНастройка = ЭлементНастройки_10_3();
		Иначе
			структНастройка = ЭлементНастройки_Устарел();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(структНастройка, цСтрокаНастройки);
		настройкиКЗаписи.Добавить(структНастройка);
		
	КонецЦикла;
	
	_лог.Отладка("К записи в файл: " + настройкиКЗаписи.Количество());
	
	ОбщегоНазначения.ЗаписатьJSONВФайл(настройкиКЗаписи, _ФайлНастроек, _Лог);
	
КонецПроцедуры

Процедура ИнициализацияПараметров(Знач Команда)
	
	путьКФайлуНастроек = Команда.ЗначениеАргумента("GENERIC_ISSUE_SETTINGS_JSON");
	файлыОшибок = Команда.ЗначениеАргумента("GENERIC_ISSUE_JSON");
	
	_ФорматОтчета = Команда.ЗначениеОпции("Format");
	_лог.Отладка("Формат отчета = " + _ФорматОтчета);

	_ФайлНастроек = ОбщегоНазначения.АбсолютныйПуть(путьКФайлуНастроек);
	_лог.Отладка("Файл настроек = " + _ФайлНастроек);
	
	_файлыОшибок = Новый Массив;
	
	Для Каждого цПутьКФайлу Из СтрРазделить(файлыОшибок, ",") Цикл
		
		Если ОбщегоНазначения.ФайлСуществует(цПутьКФайлу) Тогда
			
			файлСОшибками = ОбщегоНазначения.АбсолютныйПуть(цПутьКФайлу);
			
			_файлыОшибок.Добавить(файлСОшибками);
			
			_лог.Отладка("Добавлен файл generic-issue = " + файлСОшибками);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПрочитатьЗначенияИзФайлов()
	
	Настройки = Новый Структура;
	Настройки.Вставить("Ишузы", Новый Соответствие);
	Настройки.Вставить("Правила", Новый Соответствие);
	Настройки.Вставить("ТипФорматаОтчета", ТипыФорматаОтчетаСонар.Generic_Issue);
	
	Для Каждого цФайл Из _файлыОшибок Цикл
		
		ошибкиФайла = ОбщегоНазначения.ПрочитатьJSONФайл(цФайл, _Лог);
		
		Если НЕ ТипЗнч(ошибкиФайла) = Тип("Структура") Тогда
			
			_Лог.Ошибка("Не поддерживаемая структура файла: " + цФайл);
			Продолжить;
			
		КонецЕсли;
		
		Если НЕ ошибкиФайла.Свойство("issues") Тогда
			
			_Лог.Ошибка("Не поддерживаемая структура файла: " + цФайл);
			Продолжить;
			
		КонецЕсли;
		
		Если НЕ ТипЗнч(ошибкиФайла.issues) = Тип("Массив") Тогда
			
			_Лог.Ошибка("Не поддерживаемая структура файла: " + цФайл);
			Продолжить;
			
		КонецЕсли;
		
		Для Каждого цОшибка Из ошибкиФайла.issues Цикл
			
			прочитанныеНастройки = ПереопределяемыеПараметрыОшибки();
			ЗаполнитьЗначенияСвойств(прочитанныеНастройки, цОшибка);
			
			Настройки.Ишузы.Вставить(цОшибка.ruleId, прочитанныеНастройки);
			
		КонецЦикла;
		
		Если _ФорматОтчета = ТипыФорматаОтчетаСонар.Формат_10_3 Тогда
			
			Настройки.ТипФорматаОтчета = ТипыФорматаОтчетаСонар.Generic_Issue_10_3;
			
			Для Каждого цПравило Из ошибкиФайла.rules Цикл
				
				Если цПравило.impacts.Количество() = 0 Тогда
					
					_Лог.Ошибка("Неподдерживаемая структура файла: " + цФайл);
					Продолжить;
					
				КонецЕсли;
				
				параметрыПравила = ПереопределяемыеПараметрыПравила_10_3();
				параметрыПравила.cleanCodeAttribute = цПравило.cleanCodeAttribute;
				параметрыПравила.softwareQuality = цПравило.impacts[0].softwareQuality;
				параметрыПравила.severity = цПравило.impacts[0].severity;
				
				Настройки.Правила.Вставить(цПравило.Id, параметрыПравила);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	_лог.Отладка("Формата отчета: " + _ФорматОтчета);
	_лог.Отладка("Из файлов прочитано различных ошибок: " + Настройки.Ишузы.Количество());
	_лог.Отладка("Из файлов прочитано различных правил: " + Настройки.Правила.Количество());
	
	Возврат Настройки;
	
КонецФункции

Функция ПереопределяемыеПараметрыОшибки()
	
	Структура = Новый Структура;
	Структура.Вставить("severity"); // 10.2-
	Структура.Вставить("type"); // 10.2-
	Структура.Вставить("effortMinutes");
	
	Возврат Структура;
	
КонецФункции

Функция ПереопределяемыеПараметрыПравила_10_3()
	
	Структура = Новый Структура;
	Структура.Вставить("severity");
	Структура.Вставить("cleanCodeAttribute");
	Структура.Вставить("softwareQuality");
	
	Возврат Структура;
	
КонецФункции

Функция ЭлементНастройки_Устарел()
	
	структ = Новый Структура;
	
	структ.Вставить("ruleId");
	структ.Вставить("message");
	структ.Вставить("filePath");
	структ.Вставить("severity");
	структ.Вставить("type");
	структ.Вставить("effortMinutes");
	
	Возврат структ;
	
КонецФункции

Функция ЭлементНастройки_10_3()
	
	структ = Новый Структура;
	
	структ.Вставить("ruleId");
	структ.Вставить("message");
	структ.Вставить("filePath");
	структ.Вставить("effortMinutes");
	структ.Вставить("severity");
	структ.Вставить("cleanCodeAttribute");
	структ.Вставить("softwareQuality");
	
	Возврат структ;
	
КонецФункции

Функция ИмяЛога() Экспорт
	Возврат "oscript.app.edtExport";
КонецФункции

_Лог = Логирование.ПолучитьЛог(ИмяЛога());